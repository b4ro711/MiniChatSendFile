/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Client;

import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author BARO
 */
public class MiniChatClientChatDlg extends javax.swing.JFrame {

    /**
     * Creates new form MiniChatClientChatDlg
     */
    private Socket socket = null;
    private BufferedReader inFromClient = null;
    private DataOutputStream streamOut = null;
    private String content;
    private MyInfo info;
    private Message message;
    private int ID = -1;
    
    
    
    String username;
    String host;
    int port;
    public boolean attachmentOpen = false;
    public String mydownloadfolder = "D:\\";

    public MiniChatClientChatDlg(MyInfo _info, Message _message, Socket _socket) {
        info = _info;
        socket = _socket;
        message = _message;
        initComponents();
        this.setLocation(300, 300);
        this.setVisible(true);
        jlbToUsername.setText("gửi đến: " + message.toUsername);
        jlContent.setEditable(false);
        jlContent.setLineWrap(true);
        this.setResizable(false);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jlbToUsername = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlContent = new javax.swing.JTextArea();
        jlbAvatar = new javax.swing.JLabel();
        jtfContent = new javax.swing.JTextField();
        btnSend = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmSendFile = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlbToUsername.setText("Đến: ");

        jlContent.setColumns(20);
        jlContent.setRows(5);
        jScrollPane1.setViewportView(jlContent);

        jlbAvatar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/guitar.png"))); // NOI18N

        jtfContent.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfContentKeyPressed(evt);
            }
        });

        btnSend.setText("Gửi");
        btnSend.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSendMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jtfContent, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlbAvatar))
                    .addComponent(jlbToUsername))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlbToUsername)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jlbAvatar)
                        .addGap(57, 57, 57)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfContent, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        jmSendFile.setText("Send file");
        jmSendFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmSendFileActionPerformed(evt);
            }
        });
        jMenu1.add(jmSendFile);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSendMouseClicked
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            content = jtfContent.getText();
            streamOut.writeBytes(content + '\n');
            streamOut.flush();
            jlContent.append(info.Username + ": " + content + '\n');
            jtfContent.setText("");
        } catch (IOException ex) {
            Logger.getLogger(MiniChatClientChatDlg.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSendMouseClicked

    private void jtfContentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfContentKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                // TODO add your handling code here:
                content = jtfContent.getText();
                streamOut.writeBytes(content + '\n');
                streamOut.flush();
                jlContent.append(info.Username + ": " + content + '\n');
                jtfContent.setText("");
            } catch (IOException ex) {
                Logger.getLogger(MiniChatClientChatDlg.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jtfContentKeyPressed

    private void jmSendFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmSendFileActionPerformed
        // TODO add your handling code here:
        ClientSendFile s = new ClientSendFile();
        s.setLocationRelativeTo(null);
        s.setVisible(true);
    }//GEN-LAST:event_jmSendFileActionPerformed

    public void open() {
        try {
            inFromClient = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            streamOut = new DataOutputStream(socket.getOutputStream());
        } catch (IOException ex) {
            Logger.getLogger(MiniChatClientChatDlg.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void close() {
        if (inFromClient != null) {
            try {
                inFromClient.close();
            } catch (IOException ex) {
                Logger.getLogger(MiniChatClientChatDlg.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public void start() {
        run();
    }

    public void run() {
        while (true) {
            try {
                jlContent.append(message.toUsername + ": " + inFromClient.readLine() + '\n');
            } catch (IOException ex) {
                Logger.getLogger(MiniChatClientChatDlg.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    public int getID() {
        return ID;
    }
    
    
    
    //
    
    public void setMyTitle(String s) {
        setTitle(s);
    }

    /*
        Phương thức tải get download
     */
    public String getMyDownloadFolder() {
        return this.mydownloadfolder;
    }

    /*
        Phương thức get host
     */
    public String getMyHost() {
        return this.host;
    }

    /*
        Phương thức get Port
     */
    public int getMyPort() {
        return this.port;
    }

    /*
        Phương thức nhận My Username
     */
    public String getMyUsername() {
        return this.username;
    }

    /*
        Cập nhật Attachment 
     */
    public void updateAttachment(boolean b) {
        this.attachmentOpen = b;
    }
    
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSend;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jlContent;
    private javax.swing.JLabel jlbAvatar;
    private javax.swing.JLabel jlbToUsername;
    private javax.swing.JMenuItem jmSendFile;
    private javax.swing.JTextField jtfContent;
    // End of variables declaration//GEN-END:variables
}
